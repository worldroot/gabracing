<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
	{font-family:Consolas;
	panose-1:2 11 6 9 2 2 4 3 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:10.0pt;
	margin-left:0in;
	line-height:115%;
	font-size:12.0pt;
	font-family:"Arial",sans-serif;
	color:#D9D9D9;}
h1
	{mso-style-link:"Heading 1 Char";
	margin-top:24.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	line-height:115%;
	page-break-after:avoid;
	font-size:18.0pt;
	font-family:"Arial",sans-serif;
	color:#365F91;}
h2
	{mso-style-link:"Heading 2 Char";
	margin-top:10.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	line-height:115%;
	page-break-after:avoid;
	font-size:16.0pt;
	font-family:"Arial",sans-serif;
	color:#4F81BD;}
h3
	{mso-style-link:"Heading 3 Char";
	margin-top:10.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	line-height:115%;
	page-break-after:avoid;
	font-size:13.0pt;
	font-family:"Arial",sans-serif;
	color:#4F81BD;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{mso-style-link:"Title Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:15.0pt;
	margin-left:0in;
	border:none;
	padding:0in;
	font-size:26.0pt;
	font-family:"Arial",sans-serif;
	color:#D9D9D9;
	letter-spacing:.25pt;}
p.MsoTitleCxSpFirst, li.MsoTitleCxSpFirst, div.MsoTitleCxSpFirst
	{mso-style-link:"Title Char";
	margin:0in;
	margin-bottom:.0001pt;
	border:none;
	padding:0in;
	font-size:26.0pt;
	font-family:"Arial",sans-serif;
	color:#D9D9D9;
	letter-spacing:.25pt;}
p.MsoTitleCxSpMiddle, li.MsoTitleCxSpMiddle, div.MsoTitleCxSpMiddle
	{mso-style-link:"Title Char";
	margin:0in;
	margin-bottom:.0001pt;
	border:none;
	padding:0in;
	font-size:26.0pt;
	font-family:"Arial",sans-serif;
	color:#D9D9D9;
	letter-spacing:.25pt;}
p.MsoTitleCxSpLast, li.MsoTitleCxSpLast, div.MsoTitleCxSpLast
	{mso-style-link:"Title Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:15.0pt;
	margin-left:0in;
	border:none;
	padding:0in;
	font-size:26.0pt;
	font-family:"Arial",sans-serif;
	color:#D9D9D9;
	letter-spacing:.25pt;}
p.MsoSubtitle, li.MsoSubtitle, div.MsoSubtitle
	{mso-style-link:"Subtitle Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;
	color:#5A5A5A;
	letter-spacing:.75pt;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;}
strong
	{color:#D9D9D9;}
em
	{color:#4DC9B1;}
p.MsoDocumentMap, li.MsoDocumentMap, div.MsoDocumentMap
	{mso-style-link:"Document Map Char";
	margin:0in;
	margin-bottom:.0001pt;
	font-size:8.0pt;
	font-family:"Tahoma",sans-serif;
	color:#D9D9D9;}
p.MsoAcetate, li.MsoAcetate, div.MsoAcetate
	{mso-style-link:"Balloon Text Char";
	margin:0in;
	margin-bottom:.0001pt;
	font-size:8.0pt;
	font-family:"Tahoma",sans-serif;
	color:#D9D9D9;}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:10.0pt;
	margin-left:.5in;
	line-height:115%;
	font-size:12.0pt;
	font-family:"Arial",sans-serif;
	color:#D9D9D9;}
p.MsoListParagraphCxSpFirst, li.MsoListParagraphCxSpFirst, div.MsoListParagraphCxSpFirst
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	line-height:115%;
	font-size:12.0pt;
	font-family:"Arial",sans-serif;
	color:#D9D9D9;}
p.MsoListParagraphCxSpMiddle, li.MsoListParagraphCxSpMiddle, div.MsoListParagraphCxSpMiddle
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	line-height:115%;
	font-size:12.0pt;
	font-family:"Arial",sans-serif;
	color:#D9D9D9;}
p.MsoListParagraphCxSpLast, li.MsoListParagraphCxSpLast, div.MsoListParagraphCxSpLast
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:10.0pt;
	margin-left:.5in;
	line-height:115%;
	font-size:12.0pt;
	font-family:"Arial",sans-serif;
	color:#D9D9D9;}
span.MsoSubtleEmphasis
	{color:gray;}
span.TitleChar
	{mso-style-name:"Title Char";
	mso-style-link:Title;
	font-family:"Arial",sans-serif;
	color:#D9D9D9;
	letter-spacing:.25pt;}
span.Heading1Char
	{mso-style-name:"Heading 1 Char";
	mso-style-link:"Heading 1";
	font-family:"Arial",sans-serif;
	color:#365F91;
	font-weight:bold;}
span.Heading2Char
	{mso-style-name:"Heading 2 Char";
	mso-style-link:"Heading 2";
	font-family:"Arial",sans-serif;
	color:#4F81BD;
	font-weight:bold;}
span.Heading3Char
	{mso-style-name:"Heading 3 Char";
	mso-style-link:"Heading 3";
	font-family:"Arial",sans-serif;
	color:#4F81BD;
	font-weight:bold;}
span.DocumentMapChar
	{mso-style-name:"Document Map Char";
	mso-style-link:"Document Map";
	font-family:"Tahoma",sans-serif;}
span.BalloonTextChar
	{mso-style-name:"Balloon Text Char";
	mso-style-link:"Balloon Text";
	font-family:"Tahoma",sans-serif;}
span.SubtitleChar
	{mso-style-name:"Subtitle Char";
	mso-style-link:Subtitle;
	font-family:"Times New Roman",serif;
	color:#5A5A5A;
	letter-spacing:.75pt;}
.MsoChpDefault
	{font-family:"Calibri",sans-serif;}
.MsoPapDefault
	{margin-bottom:10.0pt;
	line-height:115%;}
@page WordSection1
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>

</head>

<body bgcolor="#1E1E1E" lang=EN-US link=blue vlink=purple>

<div class=WordSection1>

<div style='border:none;border-bottom:solid #4F81BD 1.0pt;padding:0in 0in 4.0pt 0in'>

<p class=MsoTitle>Global Azure Racing Game Hands-On Lab – Integrating with
Azure Storage</p>

</div>

<p class=MsoNormal><span class=MsoSubtleEmphasis>In this lab the racing game
will be modified to store game data in Microsoft Azure Storage. The game will
be configured to use an Azure storage account, which will be shared across all attendees
of your Global Azure Bootcamp location.</span></p>

<p class=MsoNormal><span class=MsoSubtleEmphasis>Each time a lap is completed
in the game the driver replay data for the lap will be stored in Blob storage.
This will allow for the implementation of a ghost car feature in the game,
which will enhance the playability of the game by allowing players to compete
against the ghost cars of previous laps driven by themselves and other players.</span></p>

<p class=MsoNormal><span class=MsoSubtleEmphasis>Lap and sector times will be
stored in Table storage. When the first sector in a lap is completed, an entity
for that lap will be created, and stored in a storage table. As more sectors in
the lap are completed, the entity will be updated with the sector times. Once
the lap is complete, the lap tile will be updated in the entity, and the entity
will also be stored in a rankings lap table, allowing the lap time data to be
displayed on a website.</span></p>

<p class=MsoNormal><span class=MsoSubtleEmphasis>&nbsp;</span></p>

<p class=MsoNormal>The following concepts will be covered:</p>

<p class=MsoListParagraphCxSpFirst style='margin-left:1.0in;text-indent:-.25in'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Azure Storage Client SDK</p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:1.0in;text-indent:-.25in'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Azure Blob Storage</p>

<p class=MsoListParagraphCxSpLast style='margin-left:1.0in;text-indent:-.25in'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Azure Table Storage</p>

<p class=MsoNormal><b>Estimated time: 60 minutes</b></p>

<p class=MsoNormal>&nbsp;</p>

<h1>Exercise 1: Configure the Storage Account</h1>

<p class=MsoNormal><span class=MsoSubtleEmphasis>The first step is to configure
the game to use an Azure storage account that will be shared with all attendees
at your location. This will allow the attendees to share the highscore and
replay storage data and compete with each other when playing the game.</span></p>

<p class=MsoNormal>&nbsp;</p>

<h2>Task 1: Configure the Driving Game to use an Azure Storage Account</h2>

<p class=MsoNormal><span class=MsoSubtleEmphasis>The first task is to change
the settings so that the game will use a production Azure storage account.</span></p>

<p class=MsoNormal>&nbsp;</p>

<h3>Step 1: Configure the Game Settings</h3>

<p class=MsoNormal><span class=MsoSubtleEmphasis>In this step the game settings
will be modified to use a production storage account. The name and key for this
account will be supplied to you by the instructor.</span></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'><i><span
style='color:white'>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span></i><span style='color:white'>In </span>the <span
style='color:#F79646'>AzureRacingGameWorkshop.AzureData</span> project, open <span
style='color:#F79646'>Settings.cs</span>.</p>

<p class=MsoListParagraphCxSpLast><em>This class contains the settings for the
game. You will need to modify these for the storage account your location will
be using and enter your name as the default driver name.</em></p>

<p class=MsoNormal>&nbsp;</p>

<div align=center>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none'>
 <tr>
  <td width=638 valign=top style='width:6.65in;border:solid #4F81BD 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:blue'>public</span><span
  style='font-family:Consolas;color:black'> </span><span style='font-family:
  Consolas;color:blue'>class</span><span style='font-family:Consolas;
  color:black'> </span><span style='font-family:Consolas;color:#2B91AF'>Settings</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>{</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>   
  </span><span style='font-family:Consolas;color:green'>// Player Name</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>   
  </span><span style='font-family:Consolas;color:blue'>public</span><span
  style='font-family:Consolas;color:black'> </span><span style='font-family:
  Consolas;color:blue'>static</span><span style='font-family:Consolas;
  color:black'> </span><span style='font-family:Consolas;color:blue'>string</span><span
  style='font-family:Consolas;color:black'> PlayerName = </span><span
  style='font-family:Consolas;color:#A31515'>&quot;YOUR_NAME&quot;</span><span
  style='font-family:Consolas;color:black'>;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>   
  </span><span style='font-family:Consolas;color:green'>// Storage Account</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>   
  </span><span style='font-family:Consolas;color:blue'>public</span><span
  style='font-family:Consolas;color:black'> </span><span style='font-family:
  Consolas;color:blue'>static</span><span style='font-family:Consolas;
  color:black'> </span><span style='font-family:Consolas;color:blue'>string</span><span
  style='font-family:Consolas;color:black'> StorageAccountName = </span><span
  style='font-family:Consolas;color:#A31515'>&quot;&quot;</span><span
  style='font-family:Consolas;color:black'>;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-family:Consolas;color:black'>    </span><span
  style='font-family:Consolas;color:blue'>public</span><span style='font-family:
  Consolas;color:black'> </span><span style='font-family:Consolas;color:blue'>static</span><span
  style='font-family:Consolas;color:black'> </span><span style='font-family:
  Consolas;color:blue'>string</span><span style='font-family:Consolas;
  color:black'> StorageAccountKey = </span><span style='font-family:Consolas;
  color:#A31515'>&quot;&quot;</span><span style='font-family:Consolas;
  color:black'>;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'>&nbsp;</p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>In the <span
style='color:#F79646'>GabRacingLabWeb</span> website that has been set up for
your location, enter the password provided by your event organizer to retrieve
the storage account credentials.<br>
<br>
</p>

<p class=MsoListParagraphCxSpLast style='text-indent:-.25in'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Copy-paste the <span
style='color:#F79646'>StorageAccountName</span> and <span style='color:#F79646'>StorageAccountKey</span>
settings from the website to the <span style='color:#F79646'>Settings</span>
class, taking care not to include any spaces.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoListParagraph style='text-indent:-.25in'>4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>Change the value of the <span style='color:#F79646'>PlayerName</span>
string to the name you will use as your driver name. Try and make sure it’s
unique among the attendees at your event.<br>
<em>The configuration should look similar to the following.</em></p>

<p class=MsoNormal><br>
<br>
</p>

<div align=center>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none'>
 <tr>
  <td width=638 valign=top style='width:6.65in;border:solid #4F81BD 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:10.0pt;font-family:Consolas;
  color:blue'>public</span><span style='font-size:10.0pt;font-family:Consolas;
  color:black'> </span><span style='font-size:10.0pt;font-family:Consolas;
  color:blue'>class</span><span style='font-size:10.0pt;font-family:Consolas;
  color:black'> </span><span style='font-size:10.0pt;font-family:Consolas;
  color:#2B91AF'>Settings</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:10.0pt;font-family:Consolas;
  color:black'>{</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:10.0pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:10.0pt;font-family:Consolas;
  color:green'>// Player Name</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:10.0pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:10.0pt;font-family:Consolas;
  color:blue'>public</span><span style='font-size:10.0pt;font-family:Consolas;
  color:black'> </span><span style='font-size:10.0pt;font-family:Consolas;
  color:blue'>static</span><span style='font-size:10.0pt;font-family:Consolas;
  color:black'> </span><span style='font-size:10.0pt;font-family:Consolas;
  color:blue'>string</span><span style='font-size:10.0pt;font-family:Consolas;
  color:black'> PlayerName = </span><span style='font-size:10.0pt;font-family:
  Consolas;color:#A31515'>&quot;Alan Smith&quot;</span><span style='font-size:
  10.0pt;font-family:Consolas;color:black'>;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:10.0pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:10.0pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:10.0pt;font-family:Consolas;
  color:green'>// Storage Account</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:10.0pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:10.0pt;font-family:Consolas;
  color:blue'>public</span><span style='font-size:10.0pt;font-family:Consolas;
  color:black'> </span><span style='font-size:10.0pt;font-family:Consolas;
  color:blue'>static</span><span style='font-size:10.0pt;font-family:Consolas;
  color:black'> </span><span style='font-size:10.0pt;font-family:Consolas;
  color:blue'>string</span><span style='font-size:10.0pt;font-family:Consolas;
  color:black'> StorageAccountName = </span><span style='font-size:10.0pt;
  font-family:Consolas;color:#A31515'>&quot;myeventstorage&quot;</span><span
  style='font-size:10.0pt;font-family:Consolas;color:black'>;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:10.0pt;font-family:Consolas;color:black'>    </span><span
  style='font-size:10.0pt;font-family:Consolas;color:blue'>public</span><span
  style='font-size:10.0pt;font-family:Consolas;color:black'> </span><span
  style='font-size:10.0pt;font-family:Consolas;color:blue'>static</span><span
  style='font-size:10.0pt;font-family:Consolas;color:black'> </span><span
  style='font-size:10.0pt;font-family:Consolas;color:blue'>string</span><span
  style='font-size:10.0pt;font-family:Consolas;color:black'> StorageAccountKey
  = </span><span style='font-size:10.0pt;font-family:Consolas;color:#A31515'>&quot;myeventstoragekeymyeventstoragekey&quot;</span><span
  style='font-size:10.0pt;font-family:Consolas;color:black'>;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:10.0pt'>&nbsp;</span></p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoListParagraph style='text-indent:-.25in'>5.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>Build the project and fix any errors.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<h1>Exercise 2: Save Replay Data to Blob Storage</h1>

<p class=MsoNormal><span class=MsoSubtleEmphasis>A ghost car feature will be
implemented in the racing game, which will allow players to race against the
ghost cars of themselves and other players. Blob storage provides a highly
scalable service that allows for the storage of files and binary blobs. The
replay data contains the position of the car during a lap, sampled at 200ms
intervals, and will be stored in the form of a binary blob. When the game
starts the blobs for the best player lap times will be loaded into memory, and
the binary data used to display the ghost cars for these laps. The racing game
will update the best lap times and ghost car data every time a lap is completed
in the game.</span></p>

<p class=MsoNormal>&nbsp;</p>

<h2>Task 1: Install the Storage Client Library (7.2.1)</h2>

<p class=MsoNormal><span class=MsoSubtleEmphasis>Azure is a rapidly evolving
platform, with new releases of services and SDKs occurring frequently. The
workshop will always focus on using the latest releases of the SDKs and
services, and so these will be added using the NuGet package manager.</span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>In the <span
style='color:#F79646'>AzureRacingGameWorkshop.AzureData</span> project,
right-click <span style='color:#F79646'>References</span>, and click <span
style='color:#F79646'>Manage NuGet Packages…</span><span style='color:windowtext'>.</span><br>
<br>
</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Select <span
style='color:#F79646'>Online </span><span style='font-family:Wingdings;
color:#F79646'>à</span><span style='color:#F79646'> NuGet official package
source</span> on the left of the dialog box.<br>
<br>
</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Enter <span
style='color:#F79646'>storage</span> in the search box on the right and press
enter.<br>
<br>
</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>In the <span
style='color:#F79646'>Version</span> selector, select version <span
style='color:#F79646'>7.2.1</span>.<br>
<em>This is a requirement as the racing game is built using .NET 4.0. </em></p>

<p class=MsoListParagraphCxSpLast>&nbsp;</p>

<p class=MsoNormal align=center style='text-align:center'><img width=844
height=523 id="Picture 1" src="AzureRacingGame_Storage_files/image001.jpg"></p>

<p class=MsoNormal align=center style='text-align:center'>&nbsp;</p>

<p class=MsoListParagraph style='text-indent:-.25in'>5.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>Click the <span style='color:#F79646'>Install</span> button in the <span
style='color:#F79646'>Windows Azure Storage</span> package and accept the
license agreements.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<h2>Task 2: Implement the Loading and Saving of Driver Replays</h2>

<p class=MsoNormal><span class=MsoSubtleEmphasis>Now that the storage client
library has been added, the code to integrate with the blob storage service can
be implemented.</span></p>

<p class=MsoNormal><span style='color:#7F7F7F'>&nbsp;</span></p>

<h3>Step 1: Authenticate with the Storage Service, and Create a Blob Container</h3>

<p class=MsoNormal><span class=MsoSubtleEmphasis>The racing game will need to
authenticate with an Azure storage account in order to interact with the
storage services. In this step the authentication code will be added, along
with code to get a reference to the blob container that will contain the driver
replay data. If the blob container does not exist, it will be created.</span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>In the <span
style='color:#F79646'>AzureRacingGameWorkshop.AzureData </span>project, expand
the <span style='color:#F79646'>Blobs</span> folder and open <span
style='color:#F79646'>ReplayBlobStore.cs</span>.<br>
<br>
</p>

<p class=MsoListParagraphCxSpLast style='text-indent:-.25in'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Add the highlighted
using declarations at the top of the file.<br>
<em>Feel free to copy-paste the code from the lab instructions into Visual
Studio if you want to skip typing it in.</em></p>

<p class=MsoNormal>&nbsp;</p>

<div align=center>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none'>
 <tr>
  <td width=638 valign=top style='width:6.65in;border:solid #4F81BD 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:blue'>using</span><span
  style='font-family:Consolas;color:black'> Microsoft.WindowsAzure.Storage;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:blue'>using</span><span
  style='font-family:Consolas;color:black'>
  Microsoft.WindowsAzure.Storage.Auth;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:blue'>using</span><span
  style='font-family:Consolas;color:black'> Microsoft.WindowsAzure.Storage.Blob;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:gray'>using
  System;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:gray'>using
  System.Diagnostics;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-family:Consolas;color:gray'>using System.IO;</span></p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoListParagraph style='text-indent:-.25in'>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>At the top of the <span style='color:#F79646'>ReplayBlobStore</span> class,
add a private member variable that will be used as the blob container for the
replay blobs.</p>

<p class=MsoNormal>&nbsp;</p>

<div align=center>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:black;border-collapse:collapse;border:none'>
 <tr>
  <td width=638 valign=top style='width:6.65in;border:solid #4F81BD 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#7F7F7F;
  background:black'>public class ReplayBlobStore</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#7F7F7F;
  background:black'>{</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:gainsboro;
  background:black'>    </span><a name="OLE_LINK4"></a><a name="OLE_LINK3"><span
  style='font-family:Consolas;color:#569CD6;background:black'>private</span></a><span
  style='font-family:Consolas;color:gainsboro;background:black'> </span><span
  style='font-family:Consolas;color:#4EC9B0;background:black'>CloudBlobContainer</span><span
  style='font-family:Consolas;color:gainsboro;background:black'>
  m_BlobContainer;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:gainsboro;
  background:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:gainsboro;
  background:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#7F7F7F;
  background:black'>    public ReplayBlobStore()</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#7F7F7F;
  background:black'>    {</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#7F7F7F;
  background:black'>       
  Debug.WriteLine(&quot;&gt;&gt;ReplayBlobStore()&quot;);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#7F7F7F;
  background:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-family:Consolas;color:#7F7F7F;background:black'>   
  }</span></p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal>&nbsp;</p>

<div align=center>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none'>
 <tr>
  <td width=638 valign=top style='width:6.65in;border:solid #4F81BD 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>public
  class ReplayBlobStore</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>{</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>   
  </span><span style='font-family:Consolas;color:blue'>private</span><span
  style='font-family:Consolas;color:black'> CloudBlobContainer m_BlobContainer;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>   
  public ReplayBlobStore()</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>   
  {</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>   
      Debug.WriteLine(&quot;&gt;&gt;ReplayBlobStore()&quot;);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-family:Consolas;color:#A6A6A6'>    }</span></p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoListParagraph style='text-indent:-.25in'>4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>Implement the highlighted code in the class constructor to create a
storage account, blob client and blob container.<br>
<br>
</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<div align=center>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none'>
 <tr>
  <td width=638 valign=top style='width:6.65in;border:solid #4F81BD 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>public
  ReplayBlobStore()</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>{</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>   
  Debug.WriteLine(&quot;&gt;&gt;ReplayBlobStore()&quot;);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>   
  CloudStorageAccount account;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>   
  StorageCredentials creds = </span><span style='font-family:Consolas;
  color:blue'>new</span><span style='font-family:Consolas;color:black'>
  StorageCredentials</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>       
  (Settings.StorageAccountName, Settings.StorageAccountKey);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>   
  account = </span><span style='font-family:Consolas;color:blue'>new</span><span
  style='font-family:Consolas;color:black'> CloudStorageAccount(creds, </span><span
  style='font-family:Consolas;color:blue'>true</span><span style='font-family:
  Consolas;color:black'>);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>   
  CloudBlobClient blobClient = account.CreateCloudBlobClient();</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>   
  m_BlobContainer = blobClient.GetContainerReference</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>       
  (Settings.ReplayBlobContainer);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>   
  m_BlobContainer.CreateIfNotExists();</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-family:Consolas;color:#A6A6A6'>}</span></p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoListParagraph style='text-indent:-.25in'>5.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>Build the solution and fix any errors.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<h3>Step 2: Upload Replay Data to Blob Storage</h3>

<p class=MsoNormal><span class=MsoSubtleEmphasis>When a lap is completed in the
game, a call will be made to the UploadStream method of the ReplayBlobStore
class. The parameters for this call will include the name of the blob where the
replay data will be stored, and a memory stream that contains the driver replay
data. This method will be implemented to create a blob in the blob container,
and save the binary data in the stream to the blob.</span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>In the <span
style='color:#F79646'>ReplayBlobStore</span> class, locate the <span
style='color:#F79646'>UploadStream</span> method.<br>
<br>
</p>

<p class=MsoListParagraphCxSpLast style='text-indent:-.25in'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>After the <span
style='color:#F79646'>Debug.WriteLine</span> call, add the highlighted code.<br>
<em>This code will get a reference to a blob with the appropriate name, and
then upload the binary replay data to that blob. Any exceptions will be
displayed in the debug window.</em></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<div align=center>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none'>
 <tr>
  <td width=638 valign=top style='width:6.65in;border:solid #4F81BD 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:10.0pt;font-family:Consolas;
  color:#A6A6A6'>public void UploadStream(string blobName, MemoryStream stream)</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:10.0pt;font-family:Consolas;
  color:#A6A6A6'>{</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:10.0pt;font-family:Consolas;
  color:#A6A6A6'>    Debug.WriteLine(&quot;&gt;&gt;ReplayBlobStore.UploadStream&quot;);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:10.0pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:10.0pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:10.0pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:10.0pt;font-family:Consolas;
  color:blue'>try</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:10.0pt;font-family:Consolas;
  color:black'>    {</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:10.0pt;font-family:Consolas;
  color:black'>        CloudBlockBlob blob =
  m_BlobContainer.GetBlockBlobReference(blobName);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:10.0pt;font-family:Consolas;
  color:black'>        stream.Position = 0;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:10.0pt;font-family:Consolas;
  color:black'>        blob.UploadFromStream(stream);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:10.0pt;font-family:Consolas;
  color:black'>    }</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:10.0pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:10.0pt;font-family:Consolas;
  color:blue'>catch</span><span style='font-size:10.0pt;font-family:Consolas;
  color:black'> (Exception ex)</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:10.0pt;font-family:Consolas;
  color:black'>    {</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:10.0pt;font-family:Consolas;
  color:black'>        Debug.WriteLine(</span><span style='font-size:10.0pt;
  font-family:Consolas;color:#A31515'>&quot;ReplayBlobStore.UploadStream:
  &quot;</span><span style='font-size:10.0pt;font-family:Consolas;color:black'>
  + ex.Message);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:10.0pt;font-family:Consolas;
  color:black'>    }</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:10.0pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:10.0pt;font-family:Consolas;color:#A6A6A6'>}</span></p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal><br>
<br>
</p>

<p class=MsoListParagraph style='text-indent:-.25in'>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>Build the solution and fix any errors.</p>

<p class=MsoNormal>&nbsp;</p>

<h3>Step 3: Download Replay Data from Blob Storage</h3>

<p class=MsoNormal><span class=MsoSubtleEmphasis>When the game starts, the
racing game will retrieve the best lap times for the three tracks from table
storage. The game will then download the driver replay data for these laps from
blob storage so that the ghost cars can be displayed during the game. This
replay data will be cached in memory and reused in future laps. At the start of
each lap in the game the fastest lap times will be re-loaded, and any
additional reply data for new laps will be downloaded and added to the cache. In
this step the code will be added to download the blob containing the binary
replay data and return it as a stream. The racing game will then read this
stream and deseralize the replay data.</span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>In the <span
style='color:#F79646'>ReplayBlobStore</span> class, locate the <span
style='color:#F79646'>DownloadStream</span> method.<br>
<br>
</p>

<p class=MsoListParagraphCxSpLast style='text-indent:-.25in'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>After the <span
style='color:#F79646'>Debug.WriteLine</span> call, comment out the <span
style='color:#F79646'>return null</span> line, and add the highlighted code.</p>

<p class=MsoNormal>&nbsp;</p>

<div align=center>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:black;border-collapse:collapse;border:none'>
 <tr>
  <td width=638 valign=top style='width:6.65in;border:solid #4F81BD 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#7F7F7F;
  background:black'>public Stream DownloadStream(string blobName)</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#7F7F7F;
  background:black'>{            </span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#7F7F7F;
  background:black'>   
  Debug.WriteLine(&quot;&gt;&gt;ReplayBlobStore.DownloadStream&quot;);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:gainsboro;
  background:black'>    </span><span style='font-family:Consolas;color:#57A64A;
  background:black'>//return null;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:gainsboro;
  background:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><a name="OLE_LINK8"><span style='font-family:
  Consolas;color:gainsboro;background:black'>    </span></a><span
  style='font-family:Consolas;color:#4EC9B0;background:black'>CloudBlockBlob</span><span
  style='font-family:Consolas;color:gainsboro;background:black'> blob </span><span
  style='font-family:Consolas;color:#B4B4B4;background:black'>=</span><span
  style='font-family:Consolas;color:gainsboro;background:black'> </span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:gainsboro;
  background:black'>        m_BlobContainer</span><span style='font-family:
  Consolas;color:#B4B4B4;background:black'>.</span><span style='font-family:
  Consolas;color:gainsboro;background:black'>GetBlockBlobReference(blobName);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:gainsboro;
  background:black'>    </span><span style='font-family:Consolas;color:#4EC9B0;
  background:black'>MemoryStream</span><span style='font-family:Consolas;
  color:gainsboro;background:black'> stream </span><span style='font-family:
  Consolas;color:#B4B4B4;background:black'>=</span><span style='font-family:
  Consolas;color:gainsboro;background:black'> </span><span style='font-family:
  Consolas;color:#569CD6;background:black'>new</span><span style='font-family:
  Consolas;color:gainsboro;background:black'> </span><span style='font-family:
  Consolas;color:#4EC9B0;background:black'>MemoryStream</span><span
  style='font-family:Consolas;color:gainsboro;background:black'>();</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:gainsboro;
  background:black'>    blob</span><span style='font-family:Consolas;
  color:#B4B4B4;background:black'>.</span><span style='font-family:Consolas;
  color:gainsboro;background:black'>DownloadToStream(stream);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:gainsboro;
  background:black'>    stream</span><span style='font-family:Consolas;
  color:#B4B4B4;background:black'>.</span><span style='font-family:Consolas;
  color:gainsboro;background:black'>Position </span><span style='font-family:
  Consolas;color:#B4B4B4;background:black'>=</span><span style='font-family:
  Consolas;color:gainsboro;background:black'> </span><span style='font-family:
  Consolas;color:#B5CEA8;background:black'>0</span><span style='font-family:
  Consolas;color:gainsboro;background:black'>;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:gainsboro;
  background:black'>    </span><span style='font-family:Consolas;color:#569CD6;
  background:black'>return</span><span style='font-family:Consolas;color:gainsboro;
  background:black'> stream;            </span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-family:Consolas;color:#7F7F7F;background:black'>}</span></p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal>&nbsp;</p>

<div align=center>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none'>
 <tr>
  <td width=638 valign=top style='width:6.65in;border:solid #4F81BD 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>public Stream DownloadStream(string blobName)</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>{</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>   
  Debug.WriteLine(&quot;&gt;&gt;ReplayBlobStore.DownloadStream&quot;);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:9.5pt;font-family:Consolas;
  color:green'>//return null;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    CloudBlockBlob blob =</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        m_BlobContainer.GetBlockBlobReference(blobName);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    MemoryStream stream = </span><span style='font-size:9.5pt;
  font-family:Consolas;color:blue'>new</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'> MemoryStream();</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    blob.DownloadToStream(stream);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    stream.Position = 0;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:9.5pt;font-family:Consolas;
  color:blue'>return</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> stream;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:9.5pt;font-family:Consolas;color:#A6A6A6'>}</span></p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal><br>
<br>
</p>

<p class=MsoListParagraph style='text-indent:-.25in'>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>Build the solution and fix any errors.</p>

<p class=MsoNormal>&nbsp;</p>

<h2>Task 3: Test the Implementation</h2>

<p class=MsoNormal><span class=MsoSubtleEmphasis>Now that the code to integrate
the racing game with Azure blob storage has been implemented, the game can be
tested to ensure that the replay data is stored correctly in the blob
container. </span></p>

<p class=MsoNormal>&nbsp;</p>

<h3>Step 1: Test the Implementation</h3>

<p class=MsoNormal><span class=MsoSubtleEmphasis>Now for the fun part! With the
loading and saving or replay data implemented, it’s time to drive a lap and
verify that the data is saved correctly to blob storage. In this test, the
development storage emulator will be used.</span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoListParagraph style='text-indent:-.25in'>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>In the <span style='color:#F79646'>ReplayBlobStore</span> class, add a
breakpoint to the <span style='color:#F79646'>Debug.WriteLine</span> call at
the start of the constructor.</p>

<p class=MsoNormal align=center style='text-align:center'><img width=677
height=340 id="Picture 4" src="AzureRacingGame_Storage_files/image002.png"></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoListParagraph style='text-indent:-.25in'>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>Add two other breakpoints to the <span style='color:#F79646'>Debug.WriteLine</span>
calls at the start of the <span style='color:#F79646'>UploadStream</span> and <span
style='color:#F79646'>DownloadStream</span> methods.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal align=center style='text-align:center'><span lang=SV><img
width=805 height=527 id="Picture 3"
src="AzureRacingGame_Storage_files/image003.jpg"></span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Ensure that the <span
style='color:#F79646'>RacingGame</span> project is set as the startup project.<br>
<br>
</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Press <span
style='color:#F79646'>F5</span> to start the driving game in debug mode.<br>
<br>
</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'>5.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Use <span
style='color:#F79646'>F10</span> to step through the <span style='color:#F79646'>ReplayBlobStore</span>
constructor and verify that the code executes correctly.<br>
<br>
</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'>6.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Select the car
of your choice, and drive a lap on the easy track.<br>
<em>When the lap is complete, the UploadStream method should be executed, and
the breakpoint will be hit.</em><br>
<br>
</p>

<p class=MsoListParagraphCxSpLast style='text-indent:-.25in'>7.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Use <span
style='color:#F79646'>F10</span> to step through the <span style='color:#F79646'>UploadStream</span>
method and verify that it executes correctly.<br>
<br>
</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><span class=MsoSubtleEmphasis>Note that the DownloadStream
method was not called during this test. The method will be called to retrieve
the replay data for the fastest lap times that are stored and retrieved from
Table storage. As this functionality has not been implemented yet the method
will never be called. So let’s get to work on saving the high-score data.</span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<h1>Exercise 3: Save Sector and Lap Data to Table Storage</h1>

<p class=MsoNormal><span class=MsoSubtleEmphasis>In this exercise the sector
and lap time data will be saved to table storage. This data will be used by the
high-score and ghost car functionality in the game, and also by the game
website to display lap times, driver statistics and overall standing results
for the three tracks.</span></p>

<p class=MsoNormal>&nbsp;</p>

<h2>Task 1: Save Sector and Lap Time Data</h2>

<p class=MsoNormal><span class=MsoSubtleEmphasis>When a lap is completed in the
driving game, the lap data will be saved to a table in Azure table storage that
is used to rank the drivers according to their lap time. Also, during the lap,
at each the completion of each sector, lap and sector data will be stored other
tables used for displaying the lap data for each player. In this task code will
be implemented to save this data.</span></p>

<p class=MsoNormal>&nbsp;</p>

<h3>Step 1: Authenticate with the Storage Service, and Create the Azure Storage
Tables</h3>

<p class=MsoNormal><span class=MsoSubtleEmphasis>As with the exercise using
blob storage, the racing game will need to authenticate with the table storage
services. In this step the code will be written to authenticate with Table
Storage and create any table in the storage account of they do not exist.</span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>In the <span
style='color:#F79646'>AzureRacingGameWorkshop.AzureData</span> project, in the
Tables folder open <span style='color:#F79646'>LapDataTable.cs</span>.<br>
<br>
</p>

<p class=MsoListParagraphCxSpLast style='text-indent:-.25in'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Add the
highlighted using declarations.<br>
<em>Feel free to copy-paste the code if you like.</em></p>

<p class=MsoNormal>&nbsp;</p>

<div align=center>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none'>
 <tr>
  <td width=638 valign=top style='width:6.65in;border:solid #4F81BD 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>using
  AzureRacingGameWorkshop.AzureData.Entities;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>using
  System;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>using
  System.Collections.Generic;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>using
  System.Diagnostics;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>using
  System.Linq;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:blue'>using</span><span
  style='font-family:Consolas;color:black'> Microsoft.WindowsAzure.Storage;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:blue'>using</span><span
  style='font-family:Consolas;color:black'>
  Microsoft.WindowsAzure.Storage.Auth;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-family:Consolas;color:blue'>using</span><span
  style='font-family:Consolas;color:black'>
  Microsoft.WindowsAzure.Storage.Table;</span></p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoListParagraph style='text-indent:-.25in'>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>At the start of the <span style='color:#F79646'>LapDataTable</span>
class, add a private member variable for the <span style='color:#F79646'>CloudTableClient</span>.<br>
<em>This class will be sued to access the table in the Azure storage account.</em></p>

<p class=MsoNormal>&nbsp;</p>

<div align=center>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none'>
 <tr>
  <td width=638 valign=top style='width:6.65in;border:solid #4F81BD 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>public
  class LapDataTable</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>{</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>   
  </span><span style='font-family:Consolas;color:blue'>private</span><span
  style='font-family:Consolas;color:black'> CloudTableClient m_TableClient;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>   
  public LapDataTable()</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>   
  {</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>       
  Debug.WriteLine(&quot;&gt;&gt;LapDataTable()&quot;);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-family:Consolas;color:#A6A6A6'>    }</span></p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'><span
style='font-size:11.0pt;line-height:115%'>4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>In the class constructor, under the <span style='color:#F79646'>Debug.WriteLine</span>
statement, add the highlighted code to create a cloud storage account and a
cloud table client.</p>

<p class=MsoListParagraphCxSpLast><span style='font-size:11.0pt;line-height:
115%'>&nbsp;</span></p>

<p class=MsoNormal>&nbsp;</p>

<div align=center>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none'>
 <tr>
  <td width=638 valign=top style='width:6.65in;border:solid #4F81BD 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>public LapDataTable()</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>{</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    Debug.WriteLine(&quot;&gt;&gt;LapDataTable()&quot;);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:9.5pt;font-family:Consolas;
  color:green'>// Create the table client</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    CloudStorageAccount account;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    StorageCredentials creds = </span><span style='font-size:
  9.5pt;font-family:Consolas;color:blue'>new</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'> StorageCredentials</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        (Settings.StorageAccountName,
  Settings.StorageAccountKey);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    account = </span><span style='font-size:9.5pt;font-family:
  Consolas;color:blue'>new</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> CloudStorageAccount(creds, </span><span style='font-size:9.5pt;
  font-family:Consolas;color:blue'>true</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'>);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    m_TableClient = account.CreateCloudTableClient();</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:9.5pt;font-family:Consolas;color:#A6A6A6'>}</span></p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'>5.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Add the
highlighted code to create the lap data storage tables if they do not exist.</p>

<p class=MsoListParagraphCxSpLast>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<div align=center>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none'>
 <tr>
  <td width=638 valign=top style='width:6.65in;border:solid #4F81BD 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>public
  LapDataTable()</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>{</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>   
  Debug.WriteLine(&quot;&gt;&gt;LapDataTable()&quot;);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>   
  // Create the table client</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>   
  CloudStorageAccount account;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>   
  StorageCredentials creds = new StorageCredentials</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>       
  (Settings.StorageAccountName, Settings.StorageAccountKey);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>   
  account = new CloudStorageAccount(creds, true);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>   
  m_TableClient = account.CreateCloudTableClient();</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>   
  </span><span style='font-family:Consolas;color:green'>// Create the tables</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>   
  CloudTable rankingsTable = m_TableClient.GetTableReference</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>       
  (Settings.RankingLapTimesTableName);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>   
  rankingsTable.CreateIfNotExists();</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>   
  </span><span style='font-family:Consolas;color:blue'>for</span><span
  style='font-family:Consolas;color:black'> (</span><span style='font-family:
  Consolas;color:blue'>int</span><span style='font-family:Consolas;color:black'>
  track = 0; track &lt; Settings.NumberOfTracks; track++)</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>   
  {</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>       
  CloudTable table = m_TableClient.GetTableReference</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>           
  (GetPlayerLapTableName(track));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>       
  table.CreateIfNotExists();</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>   
  }</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-family:Consolas;color:#A6A6A6'>}</span></p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoListParagraph style='text-indent:-.25in'>6.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>Build the solution and fix any errors.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<h3>Step 2: Save Ranking Sector and Lap Time Data</h3>

<p class=MsoNormal><span class=MsoSubtleEmphasis>The lap and sector data will
be stored in the rankings table at the end of each completed lap. This data
will be used for the best times for each lap, and also to provide the overall
standings results table.</span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoListParagraph style='text-indent:-.25in'>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>In the <span style='color:#F79646'>InsertRankedTime</span> method, add
the highlighted code to get a reference to the table and create a partition key
and row key for the lap data entity.<br>
<em>The partition key and row key are used to uniquely identify the entity in
the table, and also to optimize queries. The lap times table will query the
table for the quickest times for a particular track. The entities in the table
will use the level number of the track as the partition key, and a zero-padded
string using the lap time in milliseconds combined with a timestamp for the row
key. This will ensure that the data can be efficiently queried for the relevant
track, and the data will be returned in order of lap time with the quickest lap
first.</em></p>

<p class=MsoNormal>&nbsp;</p>

<div align=center>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none'>
 <tr>
  <td width=638 valign=top style='width:6.65in;border:solid #4F81BD 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>public
  void InsertRankedTime(LapData lapData)</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>{</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:#A6A6A6'>   
  Debug.WriteLine(&quot;&gt;&gt;LapDataTable.InsertRankedTime&quot;);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>   
  </span><span style='font-family:Consolas;color:green'>// Get a reference to
  the rankings table</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>   
  CloudTable table = m_TableClient.GetTableReference</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>       
  (Settings.RankingLapTimesTableName);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>   
  </span><span style='font-family:Consolas;color:green'>// Create the partition
  key and row key for the entity</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>   
  </span><span style='font-family:Consolas;color:blue'>string</span><span
  style='font-family:Consolas;color:black'> partitionKey =</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>       
  Settings.RankingLapTimesPartitionKeyPrefix + lapData.Level;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>   
  </span><span style='font-family:Consolas;color:blue'>string</span><span
  style='font-family:Consolas;color:black'> rowKey =</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>       
  lapData.LapTimeMs.ToString().PadLeft(8, </span><span style='font-family:Consolas;
  color:#A31515'>'0'</span><span style='font-family:Consolas;color:black'>) + </span><span
  style='font-family:Consolas;color:#A31515'>&quot;-&quot;</span><span
  style='font-family:Consolas;color:black'> +</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>       
  Utils.GetAscendingRowKey(lapData.GameStartTime);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-family:Consolas;color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-family:Consolas;color:#A6A6A6'>}</span></p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Add the
highlighted code to create a dynamic table entity and add the properties for
the lap data.</p>

<p class=MsoListParagraphCxSpLast><em>Dynamic table entities allow the
properties of an entity to be set dynamically at runtime. As the tracks in the
game have a different number of sectors, and new tracks may be added to the
game, it is important that the properties for the sector times for the lap can
be added dynamically.</em></p>

<p class=MsoNormal>&nbsp;</p>

<div align=center>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none'>
 <tr>
  <td width=638 valign=top style='width:6.65in;border:solid #4F81BD 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>public void InsertRankedTime(LapData lapData)</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>{</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>   
  Debug.WriteLine(&quot;&gt;&gt;LapDataTable.InsertRankedTime&quot;);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    // Get a reference to the rankings table</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    CloudTable table = m_TableClient.GetTableReference</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>        (Settings.RankingLapTimesTableName);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    // Create the partition key and row key for the entity</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    string partitionKey =</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>        Settings.RankingLapTimesPartitionKeyPrefix +
  lapData.Level;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    string rowKey =</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>        lapData.LapTimeMs.ToString().PadLeft(8, '0') +
  &quot;-&quot; +</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>        Utils.GetAscendingRowKey(lapData.GameStartTime);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:9.5pt;font-family:Consolas;
  color:green'>// Create a new dynamic entity</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    DynamicTableEntity sectorTimesEntity = </span><span
  style='font-size:9.5pt;font-family:Consolas;color:blue'>new</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        DynamicTableEntity(partitionKey, rowKey);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:9.5pt;font-family:Consolas;
  color:green'>// Add properties for the driver lap</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    sectorTimesEntity.Properties.Add</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        (</span><span style='font-size:9.5pt;font-family:Consolas;
  color:#A31515'>&quot;PlayerName&quot;</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'>, </span><span style='font-size:9.5pt;
  font-family:Consolas;color:blue'>new</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'> EntityProperty(lapData.PlayerName));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    sectorTimesEntity.Properties.Add</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        (</span><span style='font-size:9.5pt;font-family:Consolas;
  color:#A31515'>&quot;LapStartTime&quot;</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'>, </span><span style='font-size:9.5pt;
  font-family:Consolas;color:blue'>new</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'> EntityProperty(lapData.GameStartTime));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    sectorTimesEntity.Properties.Add</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        (</span><span style='font-size:9.5pt;font-family:Consolas;
  color:#A31515'>&quot;Level&quot;</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'>, </span><span style='font-size:9.5pt;
  font-family:Consolas;color:blue'>new</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'> EntityProperty(lapData.Level));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    sectorTimesEntity.Properties.Add</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        (</span><span style='font-size:9.5pt;font-family:Consolas;
  color:#A31515'>&quot;CarType&quot;</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'>, </span><span style='font-size:9.5pt;
  font-family:Consolas;color:blue'>new</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'> EntityProperty(lapData.CarType));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    sectorTimesEntity.Properties.Add</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        (</span><span style='font-size:9.5pt;font-family:Consolas;
  color:#A31515'>&quot;Dammage&quot;</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'>, </span><span style='font-size:9.5pt;
  font-family:Consolas;color:blue'>new</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'> EntityProperty(lapData.Dammage));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    sectorTimesEntity.Properties.Add</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        (</span><span style='font-size:9.5pt;font-family:Consolas;
  color:#A31515'>&quot;LapId&quot;</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'>, </span><span style='font-size:9.5pt;
  font-family:Consolas;color:blue'>new</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'> EntityProperty(lapData.LapId));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    sectorTimesEntity.Properties.Add</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        (</span><span style='font-size:9.5pt;font-family:Consolas;
  color:#A31515'>&quot;LapTimeMs&quot;</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'>, </span><span style='font-size:9.5pt;
  font-family:Consolas;color:blue'>new</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'> EntityProperty(lapData.LapTimeMs));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:9.5pt;font-family:Consolas;color:#A6A6A6'>}</span></p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoListParagraph style='text-indent:-.25in'>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>Add the highlighted code to add the sector times to the dynamic table
entity.</p>

<p class=MsoNormal>&nbsp;</p>

<div align=center>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none'>
 <tr>
  <td width=638 valign=top style='width:6.65in;border:solid #4F81BD 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    // Add properties for the driver lap</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    sectorTimesEntity.Properties.Add</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>        (&quot;PlayerName&quot;, new
  EntityProperty(lapData.PlayerName));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    sectorTimesEntity.Properties.Add</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>        (&quot;LapStartTime&quot;, new
  EntityProperty(lapData.GameStartTime));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    sectorTimesEntity.Properties.Add</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>        (&quot;Level&quot;, new EntityProperty(lapData.Level));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    sectorTimesEntity.Properties.Add</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>        (&quot;CarType&quot;, new
  EntityProperty(lapData.CarType));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    sectorTimesEntity.Properties.Add</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>        (&quot;Dammage&quot;, new
  EntityProperty(lapData.Dammage));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    sectorTimesEntity.Properties.Add</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>        (&quot;LapId&quot;, new
  EntityProperty(lapData.LapId));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    sectorTimesEntity.Properties.Add</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>        (&quot;LapTimeMs&quot;, new
  EntityProperty(lapData.LapTimeMs));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:9.5pt;font-family:Consolas;
  color:green'>// Add properties for the sector data</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:9.5pt;font-family:Consolas;
  color:blue'>int</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> sector = 1;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:9.5pt;font-family:Consolas;
  color:blue'>foreach</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> (</span><span style='font-size:9.5pt;font-family:Consolas;
  color:blue'>int</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> sectorTime </span><span style='font-size:9.5pt;font-family:
  Consolas;color:blue'>in</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> lapData.SectorTimesMs)</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    {</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        sectorTimesEntity.Properties.Add</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            (</span><span style='font-size:9.5pt;font-family:
  Consolas;color:#A31515'>&quot;Sector&quot;</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'> + sector.ToString().PadLeft(2, </span><span
  style='font-size:9.5pt;font-family:Consolas;color:#A31515'>'0'</span><span
  style='font-size:9.5pt;font-family:Consolas;color:black'>),</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            </span><span style='font-size:9.5pt;font-family:
  Consolas;color:blue'>new</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> EntityProperty(sectorTime));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        sector++;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    }</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:9.5pt;font-family:Consolas;color:#A6A6A6'>}</span></p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoListParagraph style='text-indent:-.25in'>4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>Add code to insert the entity in the table storage table.</p>

<p class=MsoNormal>&nbsp;</p>

<div align=center>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none'>
 <tr>
  <td width=638 valign=top style='width:6.65in;border:solid #4F81BD 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    // Add properties for the sector data</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    int sector = 1;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    foreach (int sectorTime in lapData.SectorTimesMs)</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    {</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>        sectorTimesEntity.Properties.Add</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>            (&quot;Sector&quot; + sector.ToString().PadLeft(2,
  '0'),</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>            new EntityProperty(sectorTime));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>        sector++;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    }</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:9.5pt;font-family:Consolas;
  color:green'>// Insert the entity in the table.</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    TableOperation insertOp =</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        TableOperation.Insert(sectorTimesEntity);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    table.Execute(insertOp);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:9.5pt;font-family:Consolas;color:black'>}</span></p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoListParagraph style='text-indent:-.25in'>5.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>The completed method is shown below.</p>

<p class=MsoNormal>&nbsp;</p>

<div align=center>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none'>
 <tr>
  <td width=638 valign=top style='width:6.65in;border:solid #4F81BD 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:blue'>public</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> </span><span style='font-size:9.5pt;font-family:Consolas;
  color:blue'>void</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> InsertRankedTime(LapData lapData)</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>{</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    Debug.WriteLine(</span><span style='font-size:9.5pt;
  font-family:Consolas;color:#A31515'>&quot;&gt;&gt;LapDataTable.InsertRankedTime&quot;</span><span
  style='font-size:9.5pt;font-family:Consolas;color:black'>);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:9.5pt;font-family:Consolas;
  color:green'>// Get a reference to the rankings table</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    CloudTable table = m_TableClient.GetTableReference</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        (Settings.RankingLapTimesTableName);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:9.5pt;font-family:Consolas;
  color:green'>// Create the partition key and row key for the entity</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:9.5pt;font-family:Consolas;
  color:blue'>string</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> partitionKey =</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        Settings.RankingLapTimesPartitionKeyPrefix +
  lapData.Level;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:9.5pt;font-family:Consolas;
  color:blue'>string</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> rowKey =</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        lapData.LapTimeMs.ToString().PadLeft(8, </span><span
  style='font-size:9.5pt;font-family:Consolas;color:#A31515'>'0'</span><span
  style='font-size:9.5pt;font-family:Consolas;color:black'>) + </span><span
  style='font-size:9.5pt;font-family:Consolas;color:#A31515'>&quot;-&quot;</span><span
  style='font-size:9.5pt;font-family:Consolas;color:black'> +</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        Utils.GetAscendingRowKey(lapData.GameStartTime);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:9.5pt;font-family:Consolas;
  color:green'>// Create a new dynamic entity</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    DynamicTableEntity sectorTimesEntity = </span><span
  style='font-size:9.5pt;font-family:Consolas;color:blue'>new</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        DynamicTableEntity(partitionKey, rowKey);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:9.5pt;font-family:Consolas;
  color:green'>// Add properties for the driver lap</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    sectorTimesEntity.Properties.Add</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        (</span><span style='font-size:9.5pt;font-family:Consolas;
  color:#A31515'>&quot;PlayerName&quot;</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'>, </span><span style='font-size:9.5pt;
  font-family:Consolas;color:blue'>new</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'> EntityProperty(lapData.PlayerName));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    sectorTimesEntity.Properties.Add</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        (</span><span style='font-size:9.5pt;font-family:Consolas;
  color:#A31515'>&quot;LapStartTime&quot;</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'>, </span><span style='font-size:9.5pt;
  font-family:Consolas;color:blue'>new</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'> EntityProperty(lapData.GameStartTime));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    sectorTimesEntity.Properties.Add</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        (</span><span style='font-size:9.5pt;font-family:Consolas;
  color:#A31515'>&quot;Level&quot;</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'>, </span><span style='font-size:9.5pt;
  font-family:Consolas;color:blue'>new</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'> EntityProperty(lapData.Level));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    sectorTimesEntity.Properties.Add</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        (</span><span style='font-size:9.5pt;font-family:Consolas;
  color:#A31515'>&quot;CarType&quot;</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'>, </span><span style='font-size:9.5pt;
  font-family:Consolas;color:blue'>new</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'> EntityProperty(lapData.CarType));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    sectorTimesEntity.Properties.Add</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        (</span><span style='font-size:9.5pt;font-family:Consolas;
  color:#A31515'>&quot;Dammage&quot;</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'>, </span><span style='font-size:9.5pt;
  font-family:Consolas;color:blue'>new</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'> EntityProperty(lapData.Dammage));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    sectorTimesEntity.Properties.Add</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        (</span><span style='font-size:9.5pt;font-family:Consolas;
  color:#A31515'>&quot;LapId&quot;</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'>, </span><span style='font-size:9.5pt;
  font-family:Consolas;color:blue'>new</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'> EntityProperty(lapData.LapId));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    sectorTimesEntity.Properties.Add</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        (</span><span style='font-size:9.5pt;font-family:Consolas;
  color:#A31515'>&quot;LapTimeMs&quot;</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'>, </span><span style='font-size:9.5pt;
  font-family:Consolas;color:blue'>new</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'> EntityProperty(lapData.LapTimeMs));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:9.5pt;font-family:Consolas;
  color:green'>// Add properties for the sector data</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:9.5pt;font-family:Consolas;
  color:blue'>int</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> sector = 1;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:9.5pt;font-family:Consolas;
  color:blue'>foreach</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> (</span><span style='font-size:9.5pt;font-family:Consolas;
  color:blue'>int</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> sectorTime </span><span style='font-size:9.5pt;font-family:
  Consolas;color:blue'>in</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> lapData.SectorTimesMs)</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    {</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        sectorTimesEntity.Properties.Add</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            (</span><span style='font-size:9.5pt;font-family:
  Consolas;color:#A31515'>&quot;Sector&quot;</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'> + sector.ToString().PadLeft(2, </span><span
  style='font-size:9.5pt;font-family:Consolas;color:#A31515'>'0'</span><span
  style='font-size:9.5pt;font-family:Consolas;color:black'>),</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            </span><span style='font-size:9.5pt;font-family:
  Consolas;color:blue'>new</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> EntityProperty(sectorTime));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        sector++;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    }</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:9.5pt;font-family:Consolas;
  color:green'>// Insert the entity in the table.</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    TableOperation insertOp =</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        TableOperation.Insert(sectorTimesEntity);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    table.Execute(insertOp);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:9.5pt;font-family:Consolas;color:black'>}</span></p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoListParagraph style='text-indent:-.25in'>6.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>Build the solution and fix any errors.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<h3>Step 3: Save Player Sector and Lap Time Data</h3>

<p class=MsoNormal><span class=MsoSubtleEmphasis>As well as viewing the fastest
lap times for the three laps, and generating high-score and championship leader
tables, the web site will display lap times for the players. In order to
provide efficient querying for this data the player lap times will be stored in
different table and stored using different values for partition key and row key
in order to make the querying more efficient.</span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>In the <span
style='color:#F79646'>LapDataTable</span> class, locate the <span
style='color:#F79646'>InsertOrReplaceDriverLapData</span> method.<br>
<br>
</p>

<p class=MsoListParagraphCxSpLast style='text-indent:-.25in'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Add the
highlighted code to create the dynamic table entity that will be inserted or
replaced in the storage table.</p>

<p class=MsoNormal>&nbsp;</p>

<div align=center>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none'>
 <tr>
  <td width=638 valign=top style='width:6.65in;border:solid #4F81BD 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>public void InsertOrReplaceDriverLapData(LapData lapData)</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>{</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    Debug.WriteLine(&quot;&gt;&gt;LapDataTable.InsertOrReplaceDriverLapData&quot;);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    try</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    {</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        CloudTable table = m_TableClient.GetTableReference</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            (GetPlayerLapTableName(lapData.Level));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        DynamicTableEntity sectorTimesEntity =</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            </span><span style='font-size:9.5pt;font-family:
  Consolas;color:blue'>new</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> DynamicTableEntity(lapData.PlayerName,</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            Utils.GetDescendingRowKey(lapData.GameStartTime));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        sectorTimesEntity.Properties.Add</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            (</span><span style='font-size:9.5pt;font-family:
  Consolas;color:#A31515'>&quot;PlayerName&quot;</span><span style='font-size:
  9.5pt;font-family:Consolas;color:black'>, </span><span style='font-size:9.5pt;
  font-family:Consolas;color:blue'>new</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'> EntityProperty(lapData.PlayerName));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        sectorTimesEntity.Properties.Add</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            (</span><span style='font-size:9.5pt;font-family:
  Consolas;color:#A31515'>&quot;LapStartTime&quot;</span><span
  style='font-size:9.5pt;font-family:Consolas;color:black'>, </span><span
  style='font-size:9.5pt;font-family:Consolas;color:blue'>new</span><span
  style='font-size:9.5pt;font-family:Consolas;color:black'> EntityProperty(lapData.GameStartTime));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        sectorTimesEntity.Properties.Add</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            (</span><span style='font-size:9.5pt;font-family:
  Consolas;color:#A31515'>&quot;Level&quot;</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'>, </span><span style='font-size:9.5pt;
  font-family:Consolas;color:blue'>new</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'> EntityProperty(lapData.Level));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        sectorTimesEntity.Properties.Add</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            (</span><span style='font-size:9.5pt;font-family:
  Consolas;color:#A31515'>&quot;CarType&quot;</span><span style='font-size:
  9.5pt;font-family:Consolas;color:black'>, </span><span style='font-size:9.5pt;
  font-family:Consolas;color:blue'>new</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'> EntityProperty(lapData.CarType));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        sectorTimesEntity.Properties.Add</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            (</span><span style='font-size:9.5pt;font-family:
  Consolas;color:#A31515'>&quot;Dammage&quot;</span><span style='font-size:
  9.5pt;font-family:Consolas;color:black'>, </span><span style='font-size:9.5pt;
  font-family:Consolas;color:blue'>new</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'> EntityProperty(lapData.Dammage));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        sectorTimesEntity.Properties.Add</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            (</span><span style='font-size:9.5pt;font-family:
  Consolas;color:#A31515'>&quot;LapId&quot;</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'>, </span><span style='font-size:9.5pt;
  font-family:Consolas;color:blue'>new</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'> EntityProperty(lapData.LapId));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        sectorTimesEntity.Properties.Add</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            (</span><span style='font-size:9.5pt;font-family:
  Consolas;color:#A31515'>&quot;LapTimeMs&quot;</span><span style='font-size:
  9.5pt;font-family:Consolas;color:black'>, </span><span style='font-size:9.5pt;
  font-family:Consolas;color:blue'>new</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'> EntityProperty(lapData.LapTimeMs));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        </span><span style='font-size:9.5pt;font-family:Consolas;
  color:blue'>int</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> sector = 1;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        </span><span style='font-size:9.5pt;font-family:Consolas;
  color:blue'>foreach</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> (</span><span style='font-size:9.5pt;font-family:Consolas;
  color:blue'>int</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> sectorTime </span><span style='font-size:9.5pt;font-family:
  Consolas;color:blue'>in</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> lapData.SectorTimesMs)</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        {</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            sectorTimesEntity.Properties.Add</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>                (</span><span style='font-size:9.5pt;font-family:
  Consolas;color:#A31515'>&quot;Sector&quot;</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'> + sector.ToString().PadLeft(2, </span><span
  style='font-size:9.5pt;font-family:Consolas;color:#A31515'>'0'</span><span
  style='font-size:9.5pt;font-family:Consolas;color:black'>),</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>                </span><span style='font-size:9.5pt;font-family:
  Consolas;color:blue'>new</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> EntityProperty(sectorTime));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            sector++;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        }</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    }</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    catch (Exception ex)</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    {</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>        Debug.WriteLine(ex.Message);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    }</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:9.5pt;font-family:Consolas;color:#A6A6A6'>}</span></p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoListParagraph style='text-indent:-.25in'>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>Add the highlighted code to insert or replace the entity asynchronously.<br>
<em>Executing the table operation asynchronously is necessary as the method
will be executed during game play. If the operation was executed synchronously
this would cause one of the frames in the game to have an abnormally long
duration, which may well cause the car to crash into a barrier or leave the
track.</em></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<div align=center>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none'>
 <tr>
  <td width=638 valign=top style='width:6.65in;border:solid #4F81BD 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>        int sector = 1;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>        foreach (int sectorTime in lapData.SectorTimesMs)</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>        {</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>            sectorTimesEntity.Properties.Add</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>                (&quot;Sector&quot; +
  sector.ToString().PadLeft(2, '0'),</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>                new EntityProperty(sectorTime));</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>            sector++;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>        }</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        TableOperation insertOrReplaceOp =</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            TableOperation.InsertOrReplace(sectorTimesEntity);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        table.BeginExecute(insertOrReplaceOp, </span><span
  style='font-size:9.5pt;font-family:Consolas;color:blue'>null</span><span
  style='font-size:9.5pt;font-family:Consolas;color:black'>, </span><span
  style='font-size:9.5pt;font-family:Consolas;color:blue'>null</span><span
  style='font-size:9.5pt;font-family:Consolas;color:black'>);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    }</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    catch (Exception ex)</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    {</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>        Debug.WriteLine(ex.Message);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    }</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:9.5pt;font-family:Consolas;color:#A6A6A6'>}</span></p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoListParagraph style='text-indent:-.25in'>4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>Build the solution and fix any errors.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<h3>Step 4: Test the Implementation</h3>

<p class=MsoNormal>With this code implemented, we can now test the
functionality, and ensure that data is stored in the development storage tables
correctly.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Remove any
existing breakpoints from the solution.<br>
<em>The Debug menu in Visual Studio has a Delete All Breakpoints item. This
will be enables if there are any breakpoints in the solution, and can be used
to remove them.</em><br>
<br>
</p>

<p class=MsoListParagraphCxSpLast style='text-indent:-.25in'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>In the <span
style='color:#F79646'>LapDataTable</span> class, add a breakpoint to the <span
style='color:#F79646'>Debug.WriteLine</span> call at the start of the
constructor.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal align=center style='text-align:center'><img width=705
height=380 id="Picture 6" src="AzureRacingGame_Storage_files/image004.png"><br>
<br>
</p>

<p class=MsoListParagraph style='text-indent:-.25in'>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>Add another breakpoint to the <span style='color:#F79646'>Debug.WriteLine</span>
call at the start of the <span style='color:#F79646'>InsertRankedTime</span>
method.<br>
<em>As the game engine will use the elapsed frame tile to calculate the car
physics. Setting a breakpoint on the InsertOrReplaceDriverLapData method will
result in a frame with a very long duration when the timing data for the first
sector is stored. This will make very very bad things happen in the physics
engine.</em><br>
<br>
</p>

<p class=MsoNormal align=center style='text-align:center'><img width=697
height=286 id="Picture 7" src="AzureRacingGame_Storage_files/image005.png"></p>

<p class=MsoNormal align=center style='text-align:center'>&nbsp;</p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Press <span
style='color:#F79646'>F5</span> to debug the driving game.<br>
<em>When the game starts the debugger should hit the breakpoint at the start of
the LapDataTable class constructor.</em><br>
<br>
</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'>5.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Use the <span
style='color:#F79646'>F10</span> key to step through the code and verify that
it executes correctly.<br>
<em>If you like you can use Azure Storage Explorer to verify that the tables
are created in the development storage service.</em><br>
<br>
</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'>6.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Set a lap on the
easy track.<br>
<br>
</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'>7.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>When the
breakpoint is hit, use <span style='color:#F79646'>F10</span> to step through
the <span style='color:#F79646'>InsertRankedTime</span> method.<br>
<br>
</p>

<p class=MsoListParagraphCxSpLast style='text-indent:-.25in'>8.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Check the racing
game website for your location to verify that your time is visible on the
website.<br>
<br>
</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<h3>Optional Step: Examine the Use of Partition Keys, Row Keys and TimeStamp</h3>

<p class=MsoNormal><span class=MsoSubtleEmphasis>Azure table storage can
provide massive scalability, allowing for tables to contain billions of
entities and still provide very efficient querying. In large scale scenarios,
the query performance can vary enormously dependent on the usage of the partition
key and row key values. In this step the table data will be examined to
evaluate how the lap time data can be queried effectively, and determine any
queries that will not perform well at scale.</span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Remove all the
breakpoints in the solution.<br>
<br>
</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Set a second lap
time on the easy track and query the table data again.<br>
<br>
</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Query the <span
style='color:#F79646'>LabRankingLapTimes</span> table and examine the values
set for <span style='color:#F79646'>PartitionKey</span>, <span
style='color:#F79646'>RowKey</span>, <span style='color:#F79646'>Timestamp</span>
and <span style='color:#F79646'>LapTimeMs</span>.<br>
<em>Notice that the partition key is set to a value that corresponds to the
track that the lap time has been set on, and the row key consists of a zero
padded value for the lap time in milliseconds, combined with a numerical time
stamp. This will ensure that the lap times for each lap are stored in their own
table partition, and that they are sorted in order of lap time, with the
fastest lap time at the top of the partition. The combination of partition key
and row key needs to be unique, so the timestamp is added so that two drivers
setting the same lap time will not cause an exception. If two drivers to set
the same lap time, the driver who set the lap time first will be given the
higher position in the standings. Formula 1 also uses this rule.</em><br>
<br>
</p>

<p class=MsoListParagraphCxSpLast style='text-indent:-.25in'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Query the <span
style='color:#F79646'>LabPlayerLapTimes0</span> table and examine the values
set for <em>PartitionKey</em> and <em>RowKey</em>.<br>
<br>
</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<h2>Task 2: Implement Loading of High-Score Data</h2>

<p class=MsoNormal>When the game starts it will load the best lap time data
from table storage and set the high-scores tables that are used in the game
interface.  This data will be used to display the top tap times in the game
play screen and the settings table, and also to load the relevant replay data
sets from blob storage to display the ghost cars for the other players, and
display the drivers position when driving a lap.</p>

<p class=MsoNormal>&nbsp;</p>

<h3>Step 1: Add Code to Load High-Score Data</h3>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>In the <span
style='color:#F79646'>AzureRacingGameWorkshop.AzureData</span> project, open
the <span style='color:#F79646'>Entities</span> folder.<br>
<br>
</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Open <span
style='color:#F79646'>LapData.cs</span>.<br>
<br>
</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'><em><span
style='color:#D9D9D9;font-style:normal'>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span></em>Add the highlighted using declarations.<br>
<em>Feel free to copy-paste the code if you like.</em></p>

<p class=MsoListParagraphCxSpLast>&nbsp;</p>

<div align=center>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none'>
 <tr>
  <td width=638 valign=top style='width:6.65in;border:solid #4F81BD 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>using System;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>using System.Collections.Generic;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>using System.Linq;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>using System.Runtime.Serialization;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>using System.Text;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:9.5pt;font-family:Consolas;color:blue'>using</span><span
  style='font-size:9.5pt;font-family:Consolas;color:black'>
  Microsoft.WindowsAzure.Storage.Table;</span></p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal><br>
<br>
</p>

<p class=MsoListParagraph style='text-indent:-.25in'>4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>Add a second constructor to the class that will create and initialize an
instance of the lap data class using a dynamic table entity with the
appropriate properties.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<div align=center>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none'>
 <tr>
  <td width=638 valign=top style='width:6.65in;border:solid #4F81BD 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>public LapData()</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>{</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    SectorTimesMs = new List&lt;int&gt;();</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    GameStartTime = DateTime.UtcNow;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>}</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:blue'>public</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> LapData(DynamicTableEntity lapDataEntity)</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>{</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    PlayerName = lapDataEntity.Properties[</span><span
  style='font-size:9.5pt;font-family:Consolas;color:#A31515'>&quot;PlayerName&quot;</span><span
  style='font-size:9.5pt;font-family:Consolas;color:black'>].StringValue;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    Level = (</span><span style='font-size:9.5pt;font-family:
  Consolas;color:blue'>int</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>)lapDataEntity.Properties[</span><span style='font-size:9.5pt;
  font-family:Consolas;color:#A31515'>&quot;Level&quot;</span><span
  style='font-size:9.5pt;font-family:Consolas;color:black'>].Int32Value;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:9.5pt;font-family:Consolas;
  color:blue'>try</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> { CarType = (</span><span style='font-size:9.5pt;font-family:
  Consolas;color:blue'>int</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>)lapDataEntity.Properties[</span><span style='font-size:9.5pt;
  font-family:Consolas;color:#A31515'>&quot;CarType&quot;</span><span
  style='font-size:9.5pt;font-family:Consolas;color:black'>].Int32Value; }</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:9.5pt;font-family:Consolas;
  color:blue'>catch</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> { }</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:9.5pt;font-family:Consolas;
  color:blue'>try</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> { Dammage = (</span><span style='font-size:9.5pt;font-family:
  Consolas;color:blue'>int</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>)lapDataEntity.Properties[</span><span style='font-size:9.5pt;
  font-family:Consolas;color:#A31515'>&quot;Dammage&quot;</span><span
  style='font-size:9.5pt;font-family:Consolas;color:black'>].Int32Value; }</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:9.5pt;font-family:Consolas;
  color:blue'>catch</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> { }</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    LapId = lapDataEntity.Properties[</span><span
  style='font-size:9.5pt;font-family:Consolas;color:#A31515'>&quot;LapId&quot;</span><span
  style='font-size:9.5pt;font-family:Consolas;color:black'>].StringValue;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    LapTimeMs = (</span><span style='font-size:9.5pt;font-family:
  Consolas;color:blue'>int</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>)lapDataEntity.Properties[</span><span style='font-size:9.5pt;
  font-family:Consolas;color:#A31515'>&quot;LapTimeMs&quot;</span><span
  style='font-size:9.5pt;font-family:Consolas;color:black'>].Int32Value;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:9.5pt;font-family:Consolas;
  color:green'>// Set the sector times</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    SectorTimesMs = </span><span style='font-size:9.5pt;
  font-family:Consolas;color:blue'>new</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'> List&lt;</span><span style='font-size:
  9.5pt;font-family:Consolas;color:blue'>int</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'>&gt;();</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:9.5pt;font-family:Consolas;
  color:blue'>for</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> (</span><span style='font-size:9.5pt;font-family:Consolas;
  color:blue'>int</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> sector = 1; sector &lt; </span><span style='font-size:9.5pt;
  font-family:Consolas;color:blue'>int</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'>.MaxValue; sector++)</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    {</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        </span><span style='font-size:9.5pt;font-family:Consolas;
  color:blue'>if</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> (lapDataEntity.Properties.ContainsKey(</span><span
  style='font-size:9.5pt;font-family:Consolas;color:#A31515'>&quot;Sector&quot;</span><span
  style='font-size:9.5pt;font-family:Consolas;color:black'> +</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            sector.ToString().PadLeft(2, </span><span
  style='font-size:9.5pt;font-family:Consolas;color:#A31515'>'0'</span><span
  style='font-size:9.5pt;font-family:Consolas;color:black'>)))</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        {</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            SectorTimesMs.Add((</span><span style='font-size:
  9.5pt;font-family:Consolas;color:blue'>int</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'>)lapDataEntity.Properties</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>                [</span><span style='font-size:9.5pt;font-family:
  Consolas;color:#A31515'>&quot;Sector&quot;</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'> + sector.ToString().PadLeft(2, </span><span
  style='font-size:9.5pt;font-family:Consolas;color:#A31515'>'0'</span><span
  style='font-size:9.5pt;font-family:Consolas;color:black'>)].Int32Value);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        }</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        </span><span style='font-size:9.5pt;font-family:Consolas;
  color:blue'>else</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        {</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            </span><span style='font-size:9.5pt;font-family:
  Consolas;color:blue'>break</span><span style='font-size:9.5pt;font-family:
  Consolas;color:black'>;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        }</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    }</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:9.5pt;font-family:Consolas;color:black'>}</span></p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'>5.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>In the <span
style='color:#F79646'>LapDataTable</span> class, locate the <span
style='color:#F79646'>GetTopLapTimes</span> method.<br>
<br>
</p>

<p class=MsoListParagraphCxSpLast style='text-indent:-.25in'>6.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Comment out the
line that returns an empty list and add the highlighted code to create the
relevant query to retrieve data from table storage.<br>
<em>If all the lap times are being selected, we can query for a specific number
of entities using the Take method. If only the best lap times for each
individual player will be selected, we need to query for all the rows in the
table, and then iterate through the entities until we have a lap time for the
required number of players, or reached the end of the dataset.</em></p>

<p class=MsoNormal>&nbsp;</p>

<div align=center>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none'>
 <tr>
  <td width=719 valign=top style='width:539.6pt;border:solid #4F81BD 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>public List&lt;LapData&gt; GetTopLapTimes(int level, int
  number, bool bestLapOnly)</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>{</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    Debug.WriteLine(&quot;&gt;&gt;LapDataTable.GetTopLapTimes&quot;);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:9.5pt;font-family:Consolas;
  color:green'>//return new List&lt;LapData&gt;();</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    CloudTable table =
  m_TableClient.GetTableReference(Settings.RankingLapTimesTableName);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    IQueryable&lt;DynamicTableEntity&gt; query;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:9.5pt;font-family:Consolas;
  color:blue'>if</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> (bestLapOnly)</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    {</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        query = (</span><span style='font-size:9.5pt;font-family:
  Consolas;color:blue'>from</span><span style='font-size:9.5pt;font-family:
  Consolas;color:black'> q</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            </span><span style='font-size:9.5pt;font-family:
  Consolas;color:blue'>in</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> table.CreateQuery&lt;DynamicTableEntity&gt;()</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>                    </span><span style='font-size:9.5pt;
  font-family:Consolas;color:blue'>where</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'>
  q.PartitionKey.Equals(Settings.RankingLapTimesPartitionKeyPrefix + level)</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>                    </span><span style='font-size:9.5pt;
  font-family:Consolas;color:blue'>select</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'> q);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    }</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:9.5pt;font-family:Consolas;
  color:blue'>else</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    {</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        query = (</span><span style='font-size:9.5pt;font-family:
  Consolas;color:blue'>from</span><span style='font-size:9.5pt;font-family:
  Consolas;color:black'> q</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            </span><span style='font-size:9.5pt;font-family:
  Consolas;color:blue'>in</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> table.CreateQuery&lt;DynamicTableEntity&gt;()</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>                    </span><span style='font-size:9.5pt;
  font-family:Consolas;color:blue'>where</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'>
  q.PartitionKey.Equals(Settings.RankingLapTimesPartitionKeyPrefix + level)</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>                    </span><span style='font-size:9.5pt;
  font-family:Consolas;color:blue'>select</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'> q).Take(number);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    }</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:9.5pt;font-family:Consolas;color:#A6A6A6'>}</span></p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoListParagraph style='text-indent:-.25in'>7.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>Add the highlighted code to iterate through the entities returned by the
query, add the lap time data to the list and return the list.<br>
<em>Feel free to copy-paste the code if you like.</em></p>

<p class=MsoNormal>&nbsp;</p>

<div align=center>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none'>
 <tr>
  <td width=719 valign=top style='width:539.6pt;border:solid #4F81BD 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>public List&lt;LapData&gt; GetTopLapTimes(int level, int
  number, bool bestLapOnly)</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>{</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>   
  Debug.WriteLine(&quot;&gt;&gt;LapDataTable.GetTopLapTimes&quot;);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    //return new List&lt;LapData&gt;();</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    CloudTable table =
  m_TableClient.GetTableReference(Settings.RankingLapTimesTableName);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    IQueryable&lt;DynamicTableEntity&gt; query;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    if (bestLapOnly)</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    {</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>        query = (from q</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>            in table.CreateQuery&lt;DynamicTableEntity&gt;()</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>                    where
  q.PartitionKey.Equals(Settings.RankingLapTimesPartitionKeyPrefix + level)</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>                    select q);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    }</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    else</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    {</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>        query = (from q</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>            in table.CreateQuery&lt;DynamicTableEntity&gt;()</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>                    where
  q.PartitionKey.Equals(Settings.RankingLapTimesPartitionKeyPrefix + level)</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>                    select q).Take(number);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:#A6A6A6'>    }</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    List&lt;LapData&gt; topTimes = </span><span
  style='font-size:9.5pt;font-family:Consolas;color:blue'>new</span><span
  style='font-size:9.5pt;font-family:Consolas;color:black'>
  List&lt;LapData&gt;();</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    List&lt;</span><span style='font-size:9.5pt;font-family:
  Consolas;color:blue'>string</span><span style='font-size:9.5pt;font-family:
  Consolas;color:black'>&gt; driverNames = </span><span style='font-size:9.5pt;
  font-family:Consolas;color:blue'>new</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'> List&lt;</span><span style='font-size:
  9.5pt;font-family:Consolas;color:blue'>string</span><span style='font-size:
  9.5pt;font-family:Consolas;color:black'>&gt;();</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:9.5pt;font-family:Consolas;
  color:blue'>int</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> fastestTime = 0;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:9.5pt;font-family:Consolas;
  color:blue'>int</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> ranking = 1;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:9.5pt;font-family:Consolas;
  color:blue'>foreach</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> (DynamicTableEntity entity </span><span style='font-size:9.5pt;
  font-family:Consolas;color:blue'>in</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'> query)</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    {</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        </span><span style='font-size:9.5pt;font-family:Consolas;
  color:blue'>bool</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> addLap = </span><span style='font-size:9.5pt;font-family:Consolas;
  color:blue'>true</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        </span><span style='font-size:9.5pt;font-family:Consolas;
  color:blue'>if</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> (bestLapOnly)</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        {</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            </span><span style='font-size:9.5pt;font-family:
  Consolas;color:blue'>string</span><span style='font-size:9.5pt;font-family:
  Consolas;color:black'> driverName = entity.Properties[</span><span
  style='font-size:9.5pt;font-family:Consolas;color:#A31515'>&quot;PlayerName&quot;</span><span
  style='font-size:9.5pt;font-family:Consolas;color:black'>].StringValue;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            </span><span style='font-size:9.5pt;font-family:
  Consolas;color:blue'>if</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> (driverNames.Contains(driverName))</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            {</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>                addLap = </span><span style='font-size:9.5pt;
  font-family:Consolas;color:blue'>false</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'>;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            }</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            </span><span style='font-size:9.5pt;font-family:
  Consolas;color:blue'>else</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            {</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>                driverNames.Add(driverName);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            }</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        }</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        </span><span style='font-size:9.5pt;font-family:Consolas;
  color:blue'>if</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> (addLap)</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        {</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            LapData lapData = </span><span style='font-size:
  9.5pt;font-family:Consolas;color:blue'>new</span><span style='font-size:9.5pt;
  font-family:Consolas;color:black'> LapData(entity);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            </span><span style='font-size:9.5pt;font-family:
  Consolas;color:blue'>if</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> (ranking == 1)</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            {</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>                fastestTime = lapData.LapTimeMs;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            }</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            lapData.LapDelta = lapData.LapTimeMs - fastestTime;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            lapData.Ranking = ranking;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            topTimes.Add(lapData);</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>            ranking++;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>        }</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    }</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>    </span><span style='font-size:9.5pt;font-family:Consolas;
  color:blue'>return</span><span style='font-size:9.5pt;font-family:Consolas;
  color:black'> topTimes;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><span style='font-size:9.5pt;font-family:Consolas;
  color:black'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:9.5pt;font-family:Consolas;color:#A6A6A6'>}</span></p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoListParagraph style='text-indent:-.25in'>8.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>Build the solution and fix any errors.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<h3>Step 2: Test the Implementation</h3>

<p class=MsoNormal>Now that the loading and saving of sector and lap time data
has been implemented the top lap time functionality can be tested. The racing
game will also attempt to load driver replay data for the fastest laps from
blob storage and display ghost cars for those laps, so the loading of replay
data can also be tested.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>In <span
style='color:#F79646'>Visual Studio</span>, remove all breakpoints from the solution.<br>
<br>
</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>In the <span
style='color:#F79646'>LapDataTable</span> class, add a breakpoint to the <span
style='color:#F79646'>Debug.WriteLine</span> call at the start of the <span
style='color:#F79646'>GetTopLapTimes</span> method.<br>
<br>
</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>In the <span
style='color:#F79646'>ReplayBlobStore</span> class, add another breakpoint to
the <span style='color:#F79646'>Debug.WriteLine</span> call at the start of the
<span style='color:#F79646'>DownloadStream</span> method.<br>
<br>
</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Press <span
style='color:#F79646'>F5</span> to start the application in debug mode.<br>
<em>The debugger should hit the breakpoint in the GetTopLapTimes method of the
LapDataTable class.</em><br>
<br>
</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'>5.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Remove the
breakpoint and use <span style='color:#F79646'>F10</span> to step through the
code, examining the <span style='color:#F79646'>topTimes</span> list in the
watch window to verify that it contains lap data.<br>
<br>
</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'>6.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Press <span
style='color:#F79646'>F5</span> to continue the execution of the application.<br>
<em>The debugger should hit the breakpoint in the DownloadStream method of the
ReplayBlobStore class.</em><br>
<br>
</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'>7.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Remove the
breakpoint and use <span style='color:#F79646'>F10</span> to step through the
code.<br>
<br>
</p>

<p class=MsoListParagraphCxSpLast style='text-indent:-.25in'>8.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Press <span
style='color:#F79646'>F5</span> to continue debugging the application.<br>
<em>You should now be able to drive a lap and race with the ghost car from your
previous best time.</em></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<h2>Task 2: Set Some Fast Lap Times</h2>

<p class=MsoNormal>With the production storage settings configured you are now
free to play the game and try to set some fast lap times. With the sector and
lap times and replay y being stored in a production storage account that is
shared with the other attendees you will be able to see their lap times in the
high scores table in the game, and be able to race against the ghost cars for
their laps.</p>

<p class=MsoNormal>You will also be able to see the lap times and overall
championship standings displayed on the racing game website. Points will be
awarded for the fastest lap times set on all three tracks using the same
shoring system that is currently used in Formula 1.</p>

<p class=MsoNormal>&nbsp;</p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='margin-left:148.1pt;border-collapse:collapse;border:none'>
 <tr>
  <td width=144 valign=top style='width:1.5in;border:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:11.0pt'>Position</span></p>
  </td>
  <td width=138 valign=top style='width:103.5pt;border:solid windowtext 1.0pt;
  border-left:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:11.0pt'>Points</span></p>
  </td>
 </tr>
 <tr>
  <td width=144 valign=top style='width:1.5in;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:11.0pt'>1<sup>st</sup></span></p>
  </td>
  <td width=138 valign=top style='width:103.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:11.0pt'>25</span></p>
  </td>
 </tr>
 <tr>
  <td width=144 valign=top style='width:1.5in;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:11.0pt'>2<sup>nd</sup> </span></p>
  </td>
  <td width=138 valign=top style='width:103.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:11.0pt'>18</span></p>
  </td>
 </tr>
 <tr>
  <td width=144 valign=top style='width:1.5in;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:11.0pt'>3<sup>rd</sup> </span></p>
  </td>
  <td width=138 valign=top style='width:103.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:11.0pt'>12</span></p>
  </td>
 </tr>
 <tr>
  <td width=144 valign=top style='width:1.5in;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:11.0pt'>4<sup>th</sup> </span></p>
  </td>
  <td width=138 valign=top style='width:103.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:11.0pt'>10</span></p>
  </td>
 </tr>
 <tr>
  <td width=144 valign=top style='width:1.5in;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:11.0pt'>5<sup>th</sup> </span></p>
  </td>
  <td width=138 valign=top style='width:103.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:11.0pt'>8</span></p>
  </td>
 </tr>
 <tr>
  <td width=144 valign=top style='width:1.5in;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:11.0pt'>6<sup>th</sup> </span></p>
  </td>
  <td width=138 valign=top style='width:103.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:11.0pt'>6</span></p>
  </td>
 </tr>
 <tr>
  <td width=144 valign=top style='width:1.5in;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:11.0pt'>7<sup>th</sup> </span></p>
  </td>
  <td width=138 valign=top style='width:103.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:11.0pt'>4</span></p>
  </td>
 </tr>
 <tr>
  <td width=144 valign=top style='width:1.5in;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:11.0pt'>8<sup>th</sup> </span></p>
  </td>
  <td width=138 valign=top style='width:103.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:11.0pt'>3</span></p>
  </td>
 </tr>
 <tr>
  <td width=144 valign=top style='width:1.5in;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:11.0pt'>9<sup>th</sup> </span></p>
  </td>
  <td width=138 valign=top style='width:103.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:11.0pt'>2</span></p>
  </td>
 </tr>
 <tr>
  <td width=144 valign=top style='width:1.5in;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:11.0pt'>10<sup>th</sup> </span></p>
  </td>
  <td width=138 valign=top style='width:103.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><span style='font-size:11.0pt'>1</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Setting a good time in all three laps will optimal for
taking the lead in the championship. Drive fast, brake hard, play fair!</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

</div>

</body>

</html>
